import React, { useState, useEffect } from 'react';
import { Container, Row, Col, Button } from 'react-bootstrap';
import { Link, Navigate, useLocation } from 'react-router-dom';
import Layout from '../Components/Layout';
import PenetrationTestingTable from '../Components/PenetrationTestingTable';
import 'bootstrap/dist/css/bootstrap.min.css';

const Main = () => {
  const [url, setUrl] = useState('');
  const location = useLocation();
  const success = location.state && location.state.success;
  const [email, setEmail] = useState('');
  const [testItems, setTestItems] = useState([]);
  const [testdata, setTestData] = useState('');
  const [responseData, setResponseData] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    // Retrieving email from local storage
    let storedEmail = localStorage.getItem('user');
    if (storedEmail) {
      const parsedEmail = JSON.parse(storedEmail);
      storedEmail = parsedEmail.email;
      setEmail(storedEmail);
    }

    // Fetch data from the API endpoint 
    const fetchData = async () => {
      try {
        const user = JSON.parse(localStorage.getItem('user'));
        const email = user?.email;
        const response = await fetch('http://127.0.0.1:8000/urls_of_users/', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email }), // Include the email in the request body
        });

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const responseData = await response.json();
        setTestItems(responseData); // Set the testItems state with the received data

      } catch (error) {
        console.error('Error:', error);
      }
    };

    fetchData();
  }, []);

  const handleChange = (event) => {
    setUrl(event.target.value);
  };

  const handleSubmit = async (event) => {
    event.preventDefault();
    try {
      const response = await fetch('http://127.0.0.1:8000/apt/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ url, email }), // Use the 'email' state variable
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      

      const contentType = response.headers.get('content-type');
      if (contentType && contentType.includes('application/json')) {
        const data1 = await response.json();
        setTestData(data1);
      } else {
        throw new Error('Response is not JSON');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  };
// event handler for downloading funtion
  const handleDownload = (generatedReport) => {
    const startIndex = generatedReport.indexOf('/media/') + '/media/'.length;
    const urlWithoutHost = generatedReport.substring(startIndex);
    window.location.href = urlWithoutHost;
  };

  if (!success) {
    return <Navigate to="/login" />;
  }

  return (
    <Layout>
      <div className="App2">
        <Container fluid className="main-content">
          <Row className="align-items-center justify-content-center">
            <Col md={8} className="aloo">
              <h5 className="display-3 mb-6">Automated Penetration Testing</h5>
              <p className="lead mb-4">Run an online automated penetration test for websites.</p>
             
              <form onSubmit={handleSubmit}>
                <div style={{ display: 'flex', alignItems: 'center' }}>
                  <input
                    type="text"
                    value={url}
                    onChange={handleChange}
                    placeholder="Enter URL"
                    style={{
                      width: '700px',
                      height: '50px',
                      padding: '10px',
                      fontSize: '16px',
                      border: '1px solid #ccc',
                      borderRadius: '4px',
                      outline: 'none',
                      marginRight: '10px',
                    }}
                  />
                  <Button
                    type="submit"
                    className="btnbg btn btn-primary"
                    style={{
                      border: 'none',
                      padding: '11px 20px',
                      fontSize: '16px',
                      cursor: 'pointer',
                      borderRadius: '4px',
                      marginLeft: '10px',
                    }}
                  >
                    Scan
                  </Button>
                </div>
              </form>
              {testdata && (
                <div>
                  <h2>Test Data</h2>
                  <p>Message: {testdata.message}</p>
                  <p>Data:</p>
                  <ul>
                    <li>ID: {testdata.data.id}</li>
                    <li>URL: {testdata.data.url}</li>
                    <li>URL Status: {testdata.data.url_status}</li>
                  </ul>
                </div>
              )}
              <PenetrationTestingTable testItems={testItems} handleDownload={handleDownload} />
            </Col>
          </Row>
        </Container>
      </div>
    </Layout>
  );
};

export default Main;
